version: '3.8'

services:
  web:
    image: terrafusion/terrafusion:staging
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      restart_policy:
        condition: on-failure
        max_attempts: 3
        window: 120s
    environment:
      - FLASK_ENV=staging
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "10"

  postgres:
    volumes:
      - postgres-staging-data:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "10"

  prometheus:
    volumes:
      - prometheus-staging-data:/prometheus
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  grafana:
    volumes:
      - grafana-staging-data:/var/lib/grafana
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  loki:
    volumes:
      - loki-staging-data:/loki
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  # Add a Redis service for staging
  redis:
    image: redis:latest
    restart: always
    volumes:
      - redis-staging-data:/data
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - terrafusion-net
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

volumes:
  postgres-staging-data:
  prometheus-staging-data:
  grafana-staging-data:
  loki-staging-data:
  redis-staging-data: